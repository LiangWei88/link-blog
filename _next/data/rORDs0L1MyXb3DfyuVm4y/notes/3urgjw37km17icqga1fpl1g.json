{"pageProps":{"note":{"id":"3urgjw37km17icqga1fpl1g","title":"React 源码分析 - 第一部分架构说明","desc":"","updated":1730642394913,"created":1730642239864,"tags":["开发","前端","React"],"custom":{},"fname":"2024.React 源码分析 - 第一部分架构说明","type":"note","vault":{"fsPath":"vault"},"contentHash":"34ddf4cfc44484a5e59f34fedb9e4e0b","links":[{"type":"frontmatterTag","from":{"fname":"2024.React 源码分析 - 第一部分架构说明","id":"3urgjw37km17icqga1fpl1g","vaultName":"vault"},"value":"tags.开发","alias":"开发","xvault":false,"to":{"fname":"tags.开发"}},{"type":"frontmatterTag","from":{"fname":"2024.React 源码分析 - 第一部分架构说明","id":"3urgjw37km17icqga1fpl1g","vaultName":"vault"},"value":"tags.前端","alias":"前端","xvault":false,"to":{"fname":"tags.前端"}},{"type":"frontmatterTag","from":{"fname":"2024.React 源码分析 - 第一部分架构说明","id":"3urgjw37km17icqga1fpl1g","vaultName":"vault"},"value":"tags.React","alias":"React","xvault":false,"to":{"fname":"tags.React"}},{"from":{"fname":"root","id":"wn8PE1RhG0znK1alrGFYv","vaultName":"vault"},"type":"backlink","position":{"start":{"line":218,"column":1,"offset":6417},"end":{"line":218,"column":31,"offset":6447},"indent":[]},"value":"2024.React 源码分析 - 第一部分架构说明"}],"anchors":{"从零开始搭建react源码工程讲座讲义":{"type":"header","text":"从零开始搭建React源码工程讲座讲义","value":"从零开始搭建react源码工程讲座讲义","line":11,"column":0,"depth":1},"课程目标":{"type":"header","text":"课程目标","value":"课程目标","line":27,"column":0,"depth":2},"课程大纲":{"type":"header","text":"课程大纲","value":"课程大纲","line":38,"column":0,"depth":2},"1-项目初始化与目录结构搭建":{"type":"header","text":"1. 项目初始化与目录结构搭建","value":"1-项目初始化与目录结构搭建","line":40,"column":0,"depth":3},"11-创建项目":{"type":"header","text":"1.1 创建项目","value":"11-创建项目","line":42,"column":0,"depth":4},"12-准备文件夹和文件":{"type":"header","text":"1.2 准备文件夹和文件","value":"12-准备文件夹和文件","line":55,"column":0,"depth":4},"2-配置typescript与eslint":{"type":"header","text":"2. 配置TypeScript与ESLint","value":"2-配置typescript与eslint","line":77,"column":0,"depth":3},"21-配置typescript":{"type":"header","text":"2.1 配置TypeScript","value":"21-配置typescript","line":79,"column":0,"depth":4},"22-配置eslint":{"type":"header","text":"2.2 配置ESLint","value":"22-配置eslint","line":102,"column":0,"depth":4},"23-安装依赖":{"type":"header","text":"2.3 安装依赖","value":"23-安装依赖","line":141,"column":0,"depth":4},"24-测试eslint配置":{"type":"header","text":"2.4 测试ESLint配置","value":"24-测试eslint配置","line":149,"column":0,"depth":4},"3-使用rollup进行打包":{"type":"header","text":"3. 使用Rollup进行打包","value":"3-使用rollup进行打包","line":153,"column":0,"depth":3},"31-安装rollup及相关插件":{"type":"header","text":"3.1 安装Rollup及相关插件","value":"31-安装rollup及相关插件","line":155,"column":0,"depth":4},"32-配置rollup":{"type":"header","text":"3.2 配置Rollup","value":"32-配置rollup","line":163,"column":0,"depth":4},"33-配置packagejson":{"type":"header","text":"3.3 配置package.json","value":"33-配置packagejson","line":209,"column":0,"depth":4},"34-测试rollup配置":{"type":"header","text":"3.4 测试Rollup配置","value":"34-测试rollup配置","line":220,"column":0,"depth":4},"4-使用jest进行单元测试":{"type":"header","text":"4. 使用Jest进行单元测试","value":"4-使用jest进行单元测试","line":224,"column":0,"depth":3},"41-安装jest及相关依赖":{"type":"header","text":"4.1 安装Jest及相关依赖","value":"41-安装jest及相关依赖","line":226,"column":0,"depth":4},"42-配置jest":{"type":"header","text":"4.2 配置Jest","value":"42-配置jest","line":234,"column":0,"depth":4},"43-配置babel":{"type":"header","text":"4.3 配置Babel","value":"43-配置babel","line":249,"column":0,"depth":4},"44-编写测试用例":{"type":"header","text":"4.4 编写测试用例","value":"44-编写测试用例","line":263,"column":0,"depth":4},"45-配置packagejson":{"type":"header","text":"4.5 配置package.json","value":"45-配置packagejson","line":294,"column":0,"depth":4},"46-测试jest配置":{"type":"header","text":"4.6 测试Jest配置","value":"46-测试jest配置","line":306,"column":0,"depth":4},"5-搭建monorepo结构并处理模块间依赖":{"type":"header","text":"5. 搭建monorepo结构并处理模块间依赖","value":"5-搭建monorepo结构并处理模块间依赖","line":310,"column":0,"depth":3},"51-初始化monorepo":{"type":"header","text":"5.1 初始化monorepo","value":"51-初始化monorepo","line":312,"column":0,"depth":4},"52-配置工作区":{"type":"header","text":"5.2 配置工作区","value":"52-配置工作区","line":330,"column":0,"depth":4},"53-处理模块间依赖":{"type":"header","text":"5.3 处理模块间依赖","value":"53-处理模块间依赖","line":339,"column":0,"depth":4},"54-测试monorepo配置":{"type":"header","text":"5.4 测试monorepo配置","value":"54-测试monorepo配置","line":351,"column":0,"depth":4},"6-创建示例页面并实现热更新":{"type":"header","text":"6. 创建示例页面并实现热更新","value":"6-创建示例页面并实现热更新","line":417,"column":0,"depth":3},"61-准备模块文件":{"type":"header","text":"6.1 准备模块文件","value":"61-准备模块文件","line":419,"column":0,"depth":4},"62-配置example模块":{"type":"header","text":"6.2 配置example模块","value":"62-配置example模块","line":430,"column":0,"depth":4},"63-配置rollup":{"type":"header","text":"6.3 配置Rollup","value":"63-配置rollup","line":476,"column":0,"depth":4},"64-配置packagejson":{"type":"header","text":"6.4 配置package.json","value":"64-配置packagejson","line":569,"column":0,"depth":4},"65-运行测试":{"type":"header","text":"6.5 运行测试","value":"65-运行测试","line":582,"column":0,"depth":4},"总结":{"type":"header","text":"总结","value":"总结","line":586,"column":0,"depth":2}},"children":[],"parent":"jj9rnjwpe2h2c5x2u03wnkc","data":{}},"body":"<h1 id=\"react-源码分析---第一部分架构说明\">React 源码分析 - 第一部分架构说明<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#react-源码分析---第一部分架构说明\"></a></h1>\n<h1 id=\"从零开始搭建react源码工程讲座讲义\">从零开始搭建React源码工程讲座讲义<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#从零开始搭建react源码工程讲座讲义\"></a></h1>\n<p>一个培训机构面试的试讲讲义</p>\n<p>录课的时候发现以下问题, 但是代码仓库是全的</p>\n<p>用的话记得重头跑一遍来查漏补缺</p>\n<blockquote>\n<ul>\n<li>babel 安装有问题</li>\n<li>创建文件路径有问题</li>\n<li>react index.ts 演示代码代码没有贴</li>\n</ul>\n</blockquote>\n<p>代码库:</p>\n<p><a href=\"https://gitee.com/imyyliang/react-clone\">https://gitee.com/imyyliang/react-clone</a></p>\n<h2 id=\"课程目标\">课程目标<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#课程目标\"></a></h2>\n<p>本课程旨在带领学员从零开始搭建一个与React官方工程结构相近的源码工程。我们将使用Rollup进行编译打包，Jest进行测试，pnpm进行包管理，并搭建一个monorepo结构的多包工程。课程将涵盖以下内容：</p>\n<ol>\n<li>项目初始化与目录结构搭建</li>\n<li>配置TypeScript与ESLint</li>\n<li>使用Rollup进行打包</li>\n<li>使用Jest进行单元测试</li>\n<li>搭建monorepo结构并处理模块间依赖</li>\n<li>创建示例页面并实现热更新</li>\n</ol>\n<h2 id=\"课程大纲\">课程大纲<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#课程大纲\"></a></h2>\n<h3 id=\"1-项目初始化与目录结构搭建\">1. 项目初始化与目录结构搭建<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#1-项目初始化与目录结构搭建\"></a></h3>\n<h4 id=\"11-创建项目\">1.1 创建项目<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#11-创建项目\"></a></h4>\n<p>首先，我们创建一个新的项目目录并初始化项目。</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> react-clone\n<span class=\"token builtin class-name\">cd</span> react-clone\n<span class=\"token function\">pnpm</span> init\n<span class=\"token function\">git</span> init\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>\n<span class=\"token function\">git</span> commit -m <span class=\"token string\">'初始化'</span>\n</code></pre>\n<h4 id=\"12-准备文件夹和文件\">1.2 准备文件夹和文件<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#12-准备文件夹和文件\"></a></h4>\n<p>接下来，我们创建项目的目录结构，并为每个模块准备必要的文件。</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> packages scripts\n<span class=\"token function\">touch</span> eslint.config.js\n\n<span class=\"token builtin class-name\">cd</span> packages\n<span class=\"token function\">mkdir</span> react react-dom scheduler\n<span class=\"token function\">mkdir</span> react/src\n<span class=\"token function\">mkdir</span> react/src/__test__\n<span class=\"token function\">touch</span> react/src/index.ts react/src/__test__/index.test.ts\n<span class=\"token comment\"># 上面两个文件也复制到 react-dom 和 scheduler</span>\n\n<span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span>/scripts\n<span class=\"token function\">mkdir</span> rollup jest babel\n<span class=\"token function\">touch</span> jest<span class=\"token punctuation\">\\</span>jest.config.js babel<span class=\"token punctuation\">\\</span>babel.config.js rollup<span class=\"token punctuation\">\\</span>rollup.config.js\n\n<span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span>\n</code></pre>\n<h3 id=\"2-配置typescript与eslint\">2. 配置TypeScript与ESLint<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#2-配置typescript与eslint\"></a></h3>\n<h4 id=\"21-配置typescript\">2.1 配置TypeScript<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#21-配置typescript\"></a></h4>\n<p>在根目录下创建<code>tsconfig.json</code>文件，并配置TypeScript编译选项。</p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ESNext\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"module\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ESNext\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"strict\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"esModuleInterop\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"forceConsistentCasingInFileNames\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"moduleResolution\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"isolatedModules\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"noEmit\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"importHelpers\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"lib\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"dom\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ESNext\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"include\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"packages/**/*\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"scripts/**/*\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"exclude\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"node_modules\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dist\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h4 id=\"22-配置eslint\">2.2 配置ESLint<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#22-配置eslint\"></a></h4>\n<p>在根目录下创建<code>eslint.config.js</code>文件，并配置ESLint规则。</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span><span class=\"token property-access\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">files</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'packages/**/*.ts'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'scripts/**/*.ts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">ignores</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'**/node_modules/**/*'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'**/dist/**/*'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'**/build/**/*'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">languageOptions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">parserOptions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">ecmaVersion</span><span class=\"token operator\">:</span> <span class=\"token string\">'latest'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">sourceType</span><span class=\"token operator\">:</span> <span class=\"token string\">'module'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">project</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'./tsconfig.json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">parser</span><span class=\"token operator\">:</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@typescript-eslint/parser'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 确保使用 TypeScript 解析器</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string-property property\">'@typescript-eslint'</span><span class=\"token operator\">:</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@typescript-eslint/eslint-plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">rules</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string-property property\">'@typescript-eslint/explicit-module-boundary-types'</span><span class=\"token operator\">:</span> <span class=\"token string\">'off'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">'@typescript-eslint/no-explicit-any'</span><span class=\"token operator\">:</span> <span class=\"token string\">'off'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">'no-console'</span><span class=\"token operator\">:</span> <span class=\"token string\">'warn'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">'@typescript-eslint/no-unused-vars'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">settings</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string-property property\">'import/resolver'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">typescript</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">project</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'./tsconfig.json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h4 id=\"23-安装依赖\">2.3 安装依赖<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#23-安装依赖\"></a></h4>\n<p>安装TypeScript和ESLint相关依赖。</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">pnpm</span> <span class=\"token function\">add</span> -D -w eslint @typescript-eslint/parser @typescript-eslint/eslint-plugin typescript\n</code></pre>\n<h4 id=\"24-测试eslint配置\">2.4 测试ESLint配置<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#24-测试eslint配置\"></a></h4>\n<p>在任何一个<code>src/index.ts</code>文件中写入<code>console.log</code>，然后运行<code>pnpm lint</code>，应该会看到警告信息。</p>\n<h3 id=\"3-使用rollup进行打包\">3. 使用Rollup进行打包<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#3-使用rollup进行打包\"></a></h3>\n<h4 id=\"31-安装rollup及相关插件\">3.1 安装Rollup及相关插件<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#31-安装rollup及相关插件\"></a></h4>\n<p>安装Rollup及其插件。</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">pnpm</span> <span class=\"token function\">add</span> -D -w rollup rollup-plugin-commonjs rollup-plugin-node-resolve rollup-plugin-typescript\n</code></pre>\n<h4 id=\"32-配置rollup\">3.2 配置Rollup<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#32-配置rollup\"></a></h4>\n<p>在<code>scripts/rollup/rollup.config.js</code>中配置Rollup。</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> resolve <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rollup-plugin-node-resolve'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> commonjs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rollup-plugin-commonjs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> typescript <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rollup-plugin-typescript'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 获取所有模块的路径</span>\n<span class=\"token keyword\">const</span> packagesDir <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../../packages'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> packages <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">readdirSync</span><span class=\"token punctuation\">(</span>packagesDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pkg</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> stat <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">statSync</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">join</span><span class=\"token punctuation\">(</span>packagesDir<span class=\"token punctuation\">,</span> pkg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">return</span> stat<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">isDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 构建每个模块的输入和输出配置</span>\n<span class=\"token keyword\">const</span> inputConfigs <span class=\"token operator\">=</span> packages<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pkg</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">input</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">join</span><span class=\"token punctuation\">(</span>packagesDir<span class=\"token punctuation\">,</span> pkg<span class=\"token punctuation\">,</span> <span class=\"token string\">'src'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'index.ts'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 每个模块的入口</span>\n  <span class=\"token literal-property property\">output</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">file</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">join</span><span class=\"token punctuation\">(</span>packagesDir<span class=\"token punctuation\">,</span> pkg<span class=\"token punctuation\">,</span> <span class=\"token string\">'dist'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'index.umd.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> <span class=\"token string\">'umd'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> pkg<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> pkg<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 生成全局名称</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">file</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">join</span><span class=\"token punctuation\">(</span>packagesDir<span class=\"token punctuation\">,</span> pkg<span class=\"token punctuation\">,</span> <span class=\"token string\">'dist'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'index.esm.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> <span class=\"token string\">'esm'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">file</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">join</span><span class=\"token punctuation\">(</span>packagesDir<span class=\"token punctuation\">,</span> pkg<span class=\"token punctuation\">,</span> <span class=\"token string\">'dist'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'index.cjs.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> <span class=\"token string\">'cjs'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">commonjs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">typescript</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span><span class=\"token property-access\">exports</span> <span class=\"token operator\">=</span> inputConfigs<span class=\"token punctuation\">;</span>\n</code></pre>\n<h4 id=\"33-配置packagejson\">3.3 配置<code>package.json</code><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#33-配置packagejson\"></a></h4>\n<p>在<code>package.json</code>中添加<code>build</code>脚本。</p>\n<pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"lint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"eslint\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rollup -c scripts/rollup/rollup.config.js\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre>\n<h4 id=\"34-测试rollup配置\">3.4 测试Rollup配置<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#34-测试rollup配置\"></a></h4>\n<p>运行<code>pnpm build</code>命令，应该会生成各个模块下方的<code>dist/index.xxx.js</code>文件。</p>\n<h3 id=\"4-使用jest进行单元测试\">4. 使用Jest进行单元测试<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#4-使用jest进行单元测试\"></a></h3>\n<h4 id=\"41-安装jest及相关依赖\">4.1 安装Jest及相关依赖<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#41-安装jest及相关依赖\"></a></h4>\n<p>安装Jest及其相关依赖。</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">pnpm</span> <span class=\"token function\">add</span> -D -w jest jest-environment-jsdom @types/jest babel-jest\n</code></pre>\n<h4 id=\"42-配置jest\">4.2 配置Jest<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#42-配置jest\"></a></h4>\n<p>在<code>scripts/jest/jest.config.js</code>中配置Jest。</p>\n<pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span><span class=\"token property-access\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">transform</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">'^.+\\\\.ts$'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'babel-jest'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">configFile</span><span class=\"token operator\">:</span> require<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../babel/babel.config.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">rootDir</span><span class=\"token operator\">:</span> process<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">cwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">roots</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'&#x3C;rootDir>/packages'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'&#x3C;rootDir>/scripts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">testEnvironment</span><span class=\"token operator\">:</span> <span class=\"token string\">'jsdom'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h4 id=\"43-配置babel\">4.3 配置Babel<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#43-配置babel\"></a></h4>\n<p>在<code>scripts/babel/babel.config.js</code>中配置Babel。</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// scripts/babel/babel.config.js</span>\nmodule<span class=\"token punctuation\">.</span><span class=\"token property-access\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">presets</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">'@babel/preset-env'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">targets</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">node</span><span class=\"token operator\">:</span> <span class=\"token string\">'current'</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'@babel/preset-typescript'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h4 id=\"44-编写测试用例\">4.4 编写测试用例<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#44-编写测试用例\"></a></h4>\n<p>在<code>packages/react/src/__test__/index.test.ts</code>中编写测试用例。</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">React</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'..'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'创建一个div元素'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> element1 <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'这是一个div元素'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>element1<span class=\"token punctuation\">.</span><span class=\"token property-access\">type</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>element1<span class=\"token punctuation\">.</span><span class=\"token property-access\">props</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>element1<span class=\"token punctuation\">.</span><span class=\"token property-access\">children</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'这是一个div元素'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'创建一个p元素，带有属性class=\"myClass\"'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> element2 <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">class</span><span class=\"token operator\">:</span> <span class=\"token string\">'myClass'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'这是一个p元素'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>element2<span class=\"token punctuation\">.</span><span class=\"token property-access\">type</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>element2<span class=\"token punctuation\">.</span><span class=\"token property-access\">props</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">class</span><span class=\"token operator\">:</span> <span class=\"token string\">'myClass'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>element2<span class=\"token punctuation\">.</span><span class=\"token property-access\">children</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'这是一个p元素'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'创建一个div元素，包含一个p元素'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> element3 <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'这是一个p元素'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>element3<span class=\"token punctuation\">.</span><span class=\"token property-access\">type</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>element3<span class=\"token punctuation\">.</span><span class=\"token property-access\">props</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>element3<span class=\"token punctuation\">.</span><span class=\"token property-access\">children</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">type</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>element3<span class=\"token punctuation\">.</span><span class=\"token property-access\">children</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">props</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>element3<span class=\"token punctuation\">.</span><span class=\"token property-access\">children</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">children</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'这是一个p元素'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h4 id=\"45-配置packagejson\">4.5 配置<code>package.json</code><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#45-配置packagejson\"></a></h4>\n<p>在<code>package.json</code>中添加<code>test</code>脚本。</p>\n<pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"lint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"eslint\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rollup -c scripts/rollup/rollup.config.js\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"jest -c scripts/jest/jest.config.js\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre>\n<h4 id=\"46-测试jest配置\">4.6 测试Jest配置<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#46-测试jest配置\"></a></h4>\n<p>运行<code>pnpm test</code>命令，应该会运行所有测试用例并输出结果。</p>\n<h3 id=\"5-搭建monorepo结构并处理模块间依赖\">5. 搭建monorepo结构并处理模块间依赖<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#5-搭建monorepo结构并处理模块间依赖\"></a></h3>\n<h4 id=\"51-初始化monorepo\">5.1 初始化monorepo<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#51-初始化monorepo\"></a></h4>\n<p>在每个模块目录下执行<code>pnpm init</code>，并修改生成的<code>package.json</code>文件，将<code>main</code>字段改为<code>src/index.ts</code>。</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> packages/react\n<span class=\"token function\">pnpm</span> init\n<span class=\"token comment\"># 修改 package.json 中的 main 字段为 src/index.ts</span>\n\n<span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span>/react-dom\n<span class=\"token function\">pnpm</span> init\n<span class=\"token comment\"># 修改 package.json 中的 main 字段为 src/index.ts</span>\n\n<span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span>/scheduler\n<span class=\"token function\">pnpm</span> init\n<span class=\"token comment\"># 修改 package.json 中的 main 字段为 src/index.ts</span>\n</code></pre>\n<h4 id=\"52-配置工作区\">5.2 配置工作区<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#52-配置工作区\"></a></h4>\n<p>在根目录下创建<code>pnpm-workspace.yaml</code>文件，配置工作区。</p>\n<pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">packages</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token string\">'packages/*'</span>\n</code></pre>\n<h4 id=\"53-处理模块间依赖\">5.3 处理模块间依赖<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#53-处理模块间依赖\"></a></h4>\n<p>在<code>react</code>模块的<code>package.json</code>中添加对<code>scheduler</code>模块的依赖。</p>\n<pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"scheduler\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"workspace:*\"</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>在<code>react</code>模块目录下运行<code>pnpm install</code>。</p>\n<h4 id=\"54-测试monorepo配置\">5.4 测试monorepo配置<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#54-测试monorepo配置\"></a></h4>\n<p>在<code>react</code>模块中使用<code>scheduler</code>模块，并编写测试用例。</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Scheduler</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'scheduler'</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">React</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> <span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> any<span class=\"token punctuation\">,</span> <span class=\"token spread operator\">...</span>children<span class=\"token operator\">:</span> any<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">{</span> type<span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">,</span> children <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">static</span> <span class=\"token function\">scheduleReconciliation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token maybe-class-name\">Scheduler</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">scheduleWork</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Reconciling...'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">React</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'..'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">Scheduler</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'scheduler'</span><span class=\"token punctuation\">;</span>\n\njest<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">mock</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scheduler'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">Scheduler</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">scheduleWork</span><span class=\"token operator\">:</span> jest<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'React 类'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'createElement 方法'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'创建一个div元素'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> element1 <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'这是一个div元素'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>element1<span class=\"token punctuation\">.</span><span class=\"token property-access\">type</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>element1<span class=\"token punctuation\">.</span><span class=\"token property-access\">props</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>element1<span class=\"token punctuation\">.</span><span class=\"token property-access\">children</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'这是一个div元素'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'创建一个p元素，带有属性class=\"myClass\"'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> element2 <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">class</span><span class=\"token operator\">:</span> <span class=\"token string\">'myClass'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'这是一个p元素'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>element2<span class=\"token punctuation\">.</span><span class=\"token property-access\">type</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>element2<span class=\"token punctuation\">.</span><span class=\"token property-access\">props</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">class</span><span class=\"token operator\">:</span> <span class=\"token string\">'myClass'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>element2<span class=\"token punctuation\">.</span><span class=\"token property-access\">children</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'这是一个p元素'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'创建一个div元素，包含一个p元素'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> element3 <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'这是一个p元素'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>element3<span class=\"token punctuation\">.</span><span class=\"token property-access\">type</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>element3<span class=\"token punctuation\">.</span><span class=\"token property-access\">props</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>element3<span class=\"token punctuation\">.</span><span class=\"token property-access\">children</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">type</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>element3<span class=\"token punctuation\">.</span><span class=\"token property-access\">children</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">props</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>element3<span class=\"token punctuation\">.</span><span class=\"token property-access\">children</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">children</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'这是一个p元素'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scheduleReconciliation 方法'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'应该调用 Scheduler.scheduleWork'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">scheduleReconciliation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">Scheduler</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">scheduleWork</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toHaveBeenCalled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>运行<code>pnpm test</code>进行测试。</p>\n<h3 id=\"6-创建示例页面并实现热更新\">6. 创建示例页面并实现热更新<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#6-创建示例页面并实现热更新\"></a></h3>\n<h4 id=\"61-准备模块文件\">6.1 准备模块文件<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#61-准备模块文件\"></a></h4>\n<p>创建<code>example</code>模块，并准备必要的文件。</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> packages/example\n<span class=\"token builtin class-name\">cd</span> packages/example\n<span class=\"token function\">touch</span> index.html index.ts\n<span class=\"token function\">pnpm</span> init\n</code></pre>\n<h4 id=\"62-配置example模块\">6.2 配置<code>example</code>模块<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#62-配置example模块\"></a></h4>\n<p>在<code>example/index.html</code>中编写HTML文件。</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&#x3C;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>title</span><span class=\"token punctuation\">></span></span>React Example<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>body</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dist/bundle.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>html</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p>在<code>example/index.ts</code>中编写TypeScript代码。</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">React</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">ReactDOM</span> <span class=\"token punctuation\">}</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createElement</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'div'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">,</span>\n  <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'h1'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Hello, World!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'This is a simple React component.'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token maybe-class-name\">ReactDOM</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">render</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>在<code>example/package.json</code>中添加依赖。</p>\n<pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"react\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"workspace:*\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"react-dom\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"workspace:*\"</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>在<code>example</code>模块目录下运行<code>pnpm install</code>。</p>\n<h4 id=\"63-配置rollup\">6.3 配置Rollup<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#63-配置rollup\"></a></h4>\n<p>在<code>scripts/rollup/rollup.config.js</code>中配置Rollup，支持热更新。</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> resolve <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rollup-plugin-node-resolve'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> commonjs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rollup-plugin-commonjs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> typescript <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rollup-plugin-typescript'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> serve <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rollup-plugin-serve'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> livereload <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rollup-plugin-livereload'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> execSync <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'child_process'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> packagesDir <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../../packages'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 获取命令行参数</span>\n<span class=\"token keyword\">const</span> argv <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span><span class=\"token property-access\">argv</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> isWatchMode <span class=\"token operator\">=</span> argv<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-w'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> argv<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'--watch'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 获取所有模块的路径</span>\n<span class=\"token keyword\">const</span> packages <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">readdirSync</span><span class=\"token punctuation\">(</span>packagesDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pkg</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> stat <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">statSync</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">join</span><span class=\"token punctuation\">(</span>packagesDir<span class=\"token punctuation\">,</span> pkg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">return</span> stat<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">isDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&#x26;&#x26;</span> pkg <span class=\"token operator\">!==</span> <span class=\"token string\">'example'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 构建每个模块的输入和输出配置</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">buildPackageConfig</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">pkg</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">input</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">join</span><span class=\"token punctuation\">(</span>packagesDir<span class=\"token punctuation\">,</span> pkg<span class=\"token punctuation\">,</span> <span class=\"token string\">'src'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'index.ts'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">output</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">file</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">join</span><span class=\"token punctuation\">(</span>packagesDir<span class=\"token punctuation\">,</span> pkg<span class=\"token punctuation\">,</span> <span class=\"token string\">'dist'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'index.umd.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> <span class=\"token string\">'umd'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> pkg<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> pkg<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">file</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">join</span><span class=\"token punctuation\">(</span>packagesDir<span class=\"token punctuation\">,</span> pkg<span class=\"token punctuation\">,</span> <span class=\"token string\">'dist'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'index.esm.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> <span class=\"token string\">'esm'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">file</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">join</span><span class=\"token punctuation\">(</span>packagesDir<span class=\"token punctuation\">,</span> pkg<span class=\"token punctuation\">,</span> <span class=\"token string\">'dist'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'index.cjs.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> <span class=\"token string\">'cjs'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">commonjs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">typescript</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 构建 example 页面的打包配置</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">buildExampleConfig</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">input</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">join</span><span class=\"token punctuation\">(</span>packagesDir<span class=\"token punctuation\">,</span> <span class=\"token string\">'example'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'index.ts'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">output</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">file</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">join</span><span class=\"token punctuation\">(</span>packagesDir<span class=\"token punctuation\">,</span> <span class=\"token string\">'example'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dist'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bundle.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> <span class=\"token string\">'iife'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">sourcemap</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">commonjs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">typescript</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">serve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">contentBase</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">join</span><span class=\"token punctuation\">(</span>packagesDir<span class=\"token punctuation\">,</span> <span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">port</span><span class=\"token operator\">:</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">livereload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">watch</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">join</span><span class=\"token punctuation\">(</span>packagesDir<span class=\"token punctuation\">,</span> <span class=\"token string\">'example'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 根据模式选择配置</span>\n<span class=\"token keyword\">const</span> inputConfigs <span class=\"token operator\">=</span> isWatchMode\n  <span class=\"token operator\">?</span> <span class=\"token punctuation\">[</span><span class=\"token function\">buildExampleConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n  <span class=\"token operator\">:</span> packages<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span>buildPackageConfig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 在所有模块打包完成后安装依赖</span>\ninputConfigs<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">config</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  config<span class=\"token punctuation\">.</span><span class=\"token property-access\">plugins</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'pnpm-install'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">buildEnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Running pnpm install for </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>config<span class=\"token punctuation\">.</span><span class=\"token property-access\">input</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">execSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pnpm install'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">cwd</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">dirname</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span><span class=\"token property-access\">input</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 导出所有配置</span>\nmodule<span class=\"token punctuation\">.</span><span class=\"token property-access\">exports</span> <span class=\"token operator\">=</span> inputConfigs<span class=\"token punctuation\">;</span>\n</code></pre>\n<h4 id=\"64-配置packagejson\">6.4 配置<code>package.json</code><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#64-配置packagejson\"></a></h4>\n<p>在<code>package.json</code>中添加<code>start</code>脚本。</p>\n<pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"lint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"eslint\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rollup -c scripts/rollup/rollup.config.js\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"jest -c scripts/jest/jest.config.js\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rollup -c scripts/rollup/rollup.config.js -w\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre>\n<h4 id=\"65-运行测试\">6.5 运行测试<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#65-运行测试\"></a></h4>\n<p>在根目录下运行<code>pnpm start</code>，然后打开<code>http://localhost:3000/</code>，应该能看到页面，同时修改<code>example/index.ts</code>可以测试热更新功能。</p>\n<h2 id=\"总结\">总结<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#总结\"></a></h2>\n<p>通过本课程，我们成功搭建了一个与React官方工程结构相近的源码工程。我们使用了Rollup进行打包，Jest进行单元测试，pnpm进行包管理，并搭建了一个monorepo结构的多包工程。我们还创建了一个示例页面并实现了热更新功能。希望本课程能帮助你更好地理解React源码工程的搭建过程。</p>\n<hr>\n<h2 id=\"tags\">Tags<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#tags\"></a></h2>\n<ol>\n<li><a class=\"color-tag\" style=\"--tag-color: #fdc1c5;\" href=\"/notes/x6h3yqz3zv0nmgq9dw0olq1\">开发</a></li>\n<li><a class=\"color-tag\" style=\"--tag-color: #7a5901;\" href=\"/notes/qckkp648x79eibufdx7ldrd\">前端</a></li>\n<li><a class=\"color-tag\" style=\"--tag-color: #929901;\" href=\"/notes/nps1x81zxd8rffss53dcfds\">React</a></li>\n</ol>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/\">伟's 博客首页</a></li>\n</ul>","noteIndex":{"id":"wn8PE1RhG0znK1alrGFYv","title":"伟's 博客首页","desc":"","updated":1730642446140,"created":1631901573363,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"9972d8a6c4ca37be732ab49363f43ecb","links":[{"type":"wiki","from":{"fname":"root","id":"wn8PE1RhG0znK1alrGFYv","vaultName":"vault"},"value":"2016","position":{"start":{"line":195,"column":5,"offset":5799},"end":{"line":195,"column":13,"offset":5807},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"2016"}},{"type":"wiki","from":{"fname":"root","id":"wn8PE1RhG0znK1alrGFYv","vaultName":"vault"},"value":"2016.如何在功能性和灵活性之间找到平衡？——以老版Wiz为知笔记为例","position":{"start":{"line":196,"column":3,"offset":5810},"end":{"line":196,"column":43,"offset":5850},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"2016.如何在功能性和灵活性之间找到平衡？——以老版Wiz为知笔记为例"}},{"type":"wiki","from":{"fname":"root","id":"wn8PE1RhG0znK1alrGFYv","vaultName":"vault"},"value":"2016.谁动了我的硬盘？电脑数据容量单位科普入门浅析","position":{"start":{"line":197,"column":3,"offset":5853},"end":{"line":197,"column":34,"offset":5884},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"2016.谁动了我的硬盘？电脑数据容量单位科普入门浅析"}},{"type":"wiki","from":{"fname":"root","id":"wn8PE1RhG0znK1alrGFYv","vaultName":"vault"},"value":"2017","position":{"start":{"line":199,"column":5,"offset":5890},"end":{"line":199,"column":13,"offset":5898},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"2017"}},{"type":"wiki","from":{"fname":"root","id":"wn8PE1RhG0znK1alrGFYv","vaultName":"vault"},"value":"2017.WordPress 迁移后遇到的问题及解决方案","position":{"start":{"line":200,"column":3,"offset":5901},"end":{"line":200,"column":35,"offset":5933},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"2017.WordPress 迁移后遇到的问题及解决方案"}},{"type":"wiki","from":{"fname":"root","id":"wn8PE1RhG0znK1alrGFYv","vaultName":"vault"},"value":"2017.如何合理定价建站服务？","position":{"start":{"line":201,"column":3,"offset":5936},"end":{"line":201,"column":23,"offset":5956},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"2017.如何合理定价建站服务？"}},{"type":"wiki","from":{"fname":"root","id":"wn8PE1RhG0znK1alrGFYv","vaultName":"vault"},"value":"2017.网站价值几何？","position":{"start":{"line":202,"column":3,"offset":5959},"end":{"line":202,"column":19,"offset":5975},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"2017.网站价值几何？"}},{"type":"wiki","from":{"fname":"root","id":"wn8PE1RhG0znK1alrGFYv","vaultName":"vault"},"value":"2017.网页设计定价：揭秘背后的故事","position":{"start":{"line":203,"column":3,"offset":5978},"end":{"line":203,"column":26,"offset":6001},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"2017.网页设计定价：揭秘背后的故事"}},{"type":"wiki","from":{"fname":"root","id":"wn8PE1RhG0znK1alrGFYv","vaultName":"vault"},"value":"2023","position":{"start":{"line":205,"column":5,"offset":6007},"end":{"line":205,"column":13,"offset":6015},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"2023"}},{"type":"wiki","from":{"fname":"root","id":"wn8PE1RhG0znK1alrGFYv","vaultName":"vault"},"value":"2023.Vue-Admin-Work 运行时 Codemirror 错误解决方案","position":{"start":{"line":206,"column":3,"offset":6018},"end":{"line":206,"column":48,"offset":6063},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"2023.Vue-Admin-Work 运行时 Codemirror 错误解决方案"}},{"type":"wiki","from":{"fname":"root","id":"wn8PE1RhG0znK1alrGFYv","vaultName":"vault"},"value":"2023.前端 vue 基本功自测","position":{"start":{"line":207,"column":3,"offset":6066},"end":{"line":207,"column":24,"offset":6087},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"2023.前端 vue 基本功自测"}},{"type":"wiki","from":{"fname":"root","id":"wn8PE1RhG0znK1alrGFYv","vaultName":"vault"},"value":"2024","position":{"start":{"line":209,"column":5,"offset":6093},"end":{"line":209,"column":13,"offset":6101},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"2024"}},{"type":"wiki","from":{"fname":"root","id":"wn8PE1RhG0znK1alrGFYv","vaultName":"vault"},"value":"2024.ai读博客 Effective Prompt 编写高质量Prompt的14个有效方法","position":{"start":{"line":210,"column":3,"offset":6104},"end":{"line":210,"column":54,"offset":6155},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"2024.ai读博客 Effective Prompt 编写高质量Prompt的14个有效方法"}},{"type":"wiki","from":{"fname":"root","id":"wn8PE1RhG0znK1alrGFYv","vaultName":"vault"},"value":"2024.Readme驱动开发（RDD）实践笔记","position":{"start":{"line":211,"column":3,"offset":6158},"end":{"line":211,"column":31,"offset":6186},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"2024.Readme驱动开发（RDD）实践笔记"}},{"type":"wiki","from":{"fname":"root","id":"wn8PE1RhG0znK1alrGFYv","vaultName":"vault"},"value":"2024.个人笔记软件思考 - Obsidian vs logseq 和其他","position":{"start":{"line":212,"column":3,"offset":6189},"end":{"line":212,"column":45,"offset":6231},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"2024.个人笔记软件思考 - Obsidian vs logseq 和其他"}},{"type":"wiki","from":{"fname":"root","id":"wn8PE1RhG0znK1alrGFYv","vaultName":"vault"},"value":"2024.鸿蒙HarmonyOS开发高级认证知识点总结","position":{"start":{"line":213,"column":3,"offset":6234},"end":{"line":213,"column":34,"offset":6265},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"2024.鸿蒙HarmonyOS开发高级认证知识点总结"}},{"type":"wiki","from":{"fname":"root","id":"wn8PE1RhG0znK1alrGFYv","vaultName":"vault"},"value":"2024.Docker镜像拉取困难？看这里！阿里云部署Dashy的成功案例","position":{"start":{"line":214,"column":3,"offset":6268},"end":{"line":214,"column":44,"offset":6309},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"2024.Docker镜像拉取困难？看这里！阿里云部署Dashy的成功案例"}},{"type":"wiki","from":{"fname":"root","id":"wn8PE1RhG0znK1alrGFYv","vaultName":"vault"},"value":"2024.打造高效的个人知识管理系统：我的思考与实践","position":{"start":{"line":215,"column":3,"offset":6312},"end":{"line":215,"column":33,"offset":6342},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"2024.打造高效的个人知识管理系统：我的思考与实践"}},{"type":"wiki","from":{"fname":"root","id":"wn8PE1RhG0znK1alrGFYv","vaultName":"vault"},"value":"2024.SQLite 数据库备份工具 README","position":{"start":{"line":216,"column":3,"offset":6345},"end":{"line":216,"column":33,"offset":6375},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"2024.SQLite 数据库备份工具 README"}},{"type":"wiki","from":{"fname":"root","id":"wn8PE1RhG0znK1alrGFYv","vaultName":"vault"},"value":"2024.使用 AI 辅助开发阿里云 OSS 自动备份工具及监控功能","position":{"start":{"line":217,"column":3,"offset":6378},"end":{"line":217,"column":41,"offset":6416},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"2024.使用 AI 辅助开发阿里云 OSS 自动备份工具及监控功能"}},{"type":"wiki","from":{"fname":"root","id":"wn8PE1RhG0znK1alrGFYv","vaultName":"vault"},"value":"2024.React 源码分析 - 第一部分架构说明","position":{"start":{"line":218,"column":1,"offset":6417},"end":{"line":218,"column":31,"offset":6447},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"2024.React 源码分析 - 第一部分架构说明"}}],"anchors":{"技能介绍":{"type":"header","text":"技能介绍","value":"技能介绍","line":9,"column":0,"depth":2},"开发技能":{"type":"header","text":"开发技能","value":"开发技能","line":11,"column":0,"depth":3},"电脑美工":{"type":"header","text":"电脑美工","value":"电脑美工","line":20,"column":0,"depth":3},"编程框架":{"type":"header","text":"编程框架","value":"编程框架","line":25,"column":0,"depth":3},"管理和规范化工具":{"type":"header","text":"管理和规范化工具","value":"管理和规范化工具","line":30,"column":0,"depth":3},"运维":{"type":"header","text":"运维","value":"运维","line":36,"column":0,"depth":3},"ai-人工智能":{"type":"header","text":"AI 人工智能","value":"ai-人工智能","line":41,"column":0,"depth":3},"教育背景":{"type":"header","text":"教育背景","value":"教育背景","line":46,"column":0,"depth":2},"工作经历":{"type":"header","text":"工作经历","value":"工作经历","line":52,"column":0,"depth":2},"2012-2013":{"type":"header","text":"2012-2013","value":"2012-2013","line":54,"column":0,"depth":3},"2013-2014":{"type":"header","text":"2013-2014","value":"2013-2014","line":61,"column":0,"depth":3},"2015-2017":{"type":"header","text":"2015-2017","value":"2015-2017","line":67,"column":0,"depth":3},"2017-2019":{"type":"header","text":"2017-2019","value":"2017-2019","line":84,"column":0,"depth":3},"个人项目":{"type":"header","text":"个人项目","value":"个人项目","line":116,"column":0,"depth":2},"sqlite数据库备份工具":{"type":"header","text":"SQLite数据库备份工具","value":"sqlite数据库备份工具","line":118,"column":0,"depth":3},"chrome-标签页ai分类插件":{"type":"header","text":"Chrome 标签页AI分类插件","value":"chrome-标签页ai分类插件","line":122,"column":0,"depth":3},"cli-param-concat-命令参数拼接管理工具":{"type":"header","text":"CLI Param Concat 命令参数拼接管理工具","value":"cli-param-concat-命令参数拼接管理工具","line":126,"column":0,"depth":3},"码云贡献爬取工具":{"type":"header","text":"码云贡献爬取工具","value":"码云贡献爬取工具","line":131,"column":0,"depth":3},"作业提交系统":{"type":"header","text":"作业提交系统","value":"作业提交系统","line":137,"column":0,"depth":3},"井字棋":{"type":"header","text":"井字棋","value":"井字棋","line":141,"column":0,"depth":3},"局域网评分投票工具":{"type":"header","text":"局域网评分投票工具","value":"局域网评分投票工具","line":145,"column":0,"depth":3},"opencart-欧洲发票号修改插件":{"type":"header","text":"Opencart 欧洲发票号修改插件","value":"opencart-欧洲发票号修改插件","line":149,"column":0,"depth":3},"webpack-px2rem-loader":{"type":"header","text":"webpack-px2rem-loader","value":"webpack-px2rem-loader","line":153,"column":0,"depth":3},"css-长度单位转换器":{"type":"header","text":"css 长度单位转换器","value":"css-长度单位转换器","line":157,"column":0,"depth":3},"键盘侠":{"type":"header","text":"\"键盘侠\"","value":"键盘侠","line":161,"column":0,"depth":3},"autositescreenshot":{"type":"header","text":"AutoSiteScreenShot","value":"autositescreenshot","line":165,"column":0,"depth":3},"简单-leetcode-题解":{"type":"header","text":"简单 leetcode 题解","value":"简单-leetcode-题解","line":169,"column":0,"depth":3},"basscss-原子css":{"type":"header","text":"Basscss 原子css","value":"basscss-原子css","line":174,"column":0,"depth":3},"前端输入法词库":{"type":"header","text":"前端输入法词库","value":"前端输入法词库","line":178,"column":0,"depth":3},"获得荣誉":{"type":"header","text":"获得荣誉","value":"获得荣誉","line":182,"column":0,"depth":2},"证书":{"type":"header","text":"证书","value":"证书","line":188,"column":0,"depth":2},"沟通语言":{"type":"header","text":"沟通语言","value":"沟通语言","line":193,"column":0,"depth":2},"文章列表":{"type":"header","text":"文章列表","value":"文章列表","line":199,"column":0,"depth":2},"":{"type":"header","text":"","value":"","line":201,"column":0,"depth":3},"-1":{"type":"header","text":"","value":"-1","line":205,"column":0,"depth":3},"-2":{"type":"header","text":"","value":"-2","line":211,"column":0,"depth":3},"-3":{"type":"header","text":"","value":"-3","line":215,"column":0,"depth":3},"todo-待编写介绍":{"type":"header","text":"TODO 待编写介绍","value":"todo-待编写介绍","line":226,"column":0,"depth":1}},"children":["vsguek05jsxrs3n29u2djmg","42flion6vsanas7ma8apdgc","cyjg2pr9blmc62o08wkqi7h","jj9rnjwpe2h2c5x2u03wnkc","jzq3k39poeomxtuu0rw4wd2"],"parent":null,"data":{},"body":"**找工作 ing**\n\n## 技能介绍\n\n### 开发技能\n- **基本技术**: html css javascript typescript\n- **前端框架**：精通 Vue.js（包括 Vue2 和 Vue3）、微信原生小程序、uniapp 以及鸿蒙 HarmonyOS next 开发\n- **后端和运维**：熟练使用 Node.js、空间托管年代配置过 apache, 后来在公司技术总监不在的时候也负责处理 nginx 部署\n- **预处理器**：熟练使用 Sass 和 Less\n- **工具与构建**：熟练使用 WebSocket、Webpack、Vite、鸿蒙 ArkTS 和 ArkUI\n- **数据库与后端语言**：在查找文档帮助下可以使用 MySQL 和 PHP（多年前熟练，现在放下了）\n- **脚本语言**：了解并试用过 Python，能够在 AI 帮助下编写脚本\n\n### 电脑美工\n\n- **图像处理**：熟练使用 Photoshop\n- **图形设计**：了解并能配合设计师处理 Illustrator\n\n### 编程框架\n\n- **前端框架**：十分熟练 Vue.js 和 jQuery\n- **CMS 和电子商务**：多年前用过 Magento、Opencart、Wordpress，学生时代用过 Joomla 和 Three.js、Zepto\n\n### 管理和规范化工具\n\n- **版本控制**：工作中使用 Git 和 GitHub Actions\n- **进程管理**：使用 pm2\n- **容器化**：使用 Docker\n\n### 运维\n\n- **Linux 环境**：基本 Linux 环境管理运维\n- **Web 服务器**：除了 Node.js 以外，可以查文档使用 Apache 和 Nginx\n\n### AI 人工智能\n\n- **AI 框架**：有基本搭建部署使用经验，包括 RAG、本地 Ollama\n- **图像生成**：有使用经验，包括 Stable Diffusion\n\n## 教育背景\n- **2010-2011**：巴黎第十三大学，网络多媒体策划与实践方向 CIWM\n  - 专注于网络多媒体内容的策划、设计和实践，包括但不限于网站设计、互动媒体和数字内容管理。\n- **2008-2010**：巴黎第十三大学，网络传媒专业 SRC\n  - 学习了网络传媒的基础知识，包括网络传播理论、数字媒体技术和传媒法规等。\n\n## 工作经历\n**法国部分**\n### 2012-2013\n- **公司**: sushikyo94.fr, Vadinoe.com\n- **职位**: 独立开发者\n- **项目**: 独立完成两个网店开发\n  - 使用 Opencart 完成一个网店开发\n  - 使用 Wordpress 完成另一个网店开发\n\n### 2013-2014\n- **公司**: Flashboutique\n- **职位**: 网店开发者\n- **项目**: Opencart 网店二次开发\n  - 包括轮盘游戏开发，基于开源代码\n\n### 2015-2017\n- **职位**: 全栈开发者\n- **项目**: 多个项目，包括工作和外包\n  - **Tokyo95.fr**\n    - 寿司店外卖 Magento 系统\n  - **Immo75.paris**\n    - 房地产租售信息平台网站 Wordpress 系统\n  - **Faguoyaodian.com**\n    - 法国药妆代售系统，Magento 系统\n  - **Aimu.fr**\n    - 中国寝具工厂法语网站，巴黎展会使用\n    - 备注：网站应该已经改版\n  - **Luxaword.com**\n    - 巴黎免税店在线商店\n    - 负责前端修改, SEO 优化和 Google 广告分析和优化\n\n**中国部分**\n### 2017-2019\n- **公司**: 微来（中国）有限公司\n- **职位**: 前端组长\n- **职责**:\n  - 负责技术选型\n  - 架构优化和框架维护\n  - 安排开发任务\n  - 实际参与项目最终实现\n- **项目**\n  - **澳蚁** app\n    - **项目描述**: 一款跨境电商保健品分销前后台\n    - **技术栈**: Vue + Node.js + Java\n    - **我的职责**:\n      - 负责 Vue 和 Node.js 开发\n      - 后用 UniApp 实现小程序、WebApp 和 iOS、Android App\n\n  - **砍砍猫**\n    - **项目描述**: 一款专注于砍价商品发布的小程序平台\n    - **技术栈**: UniApp\n    - **我的职责**:\n      - 使用 UniApp 实现小程序, nodejs 实现 websocket 和反向代理\n\n  - **小名片**\n    - **项目描述**: 一款无代码名片编辑生成小程序\n    - **技术栈**: UniApp\n    - **我的职责**:\n      - 使用 UniApp 实现小程序, nodejs 实现 websocket 和反向代理\n\n  - **winnet 微来中国官网**\n    - **项目描述**: 中法双语公司介绍\n    - **技术栈**: wordpress php\n\n## 个人项目\n\n### SQLite数据库备份工具\n[Gitee链接](https://gitee.com/imyyliang/sqlite-database-backup-tool)  \n一个自动备份SQLite数据库文件的解决方案，它提供了一个简单的Web界面，方便用户查看备份记录和管理数据库备份状态。该项目通过定时扫描和备份.db文件，确保数据的安全性和完整性。\n\n### Chrome 标签页AI分类插件\n[Gitee链接](https://gitee.com/imyyliang/tab-auto-group)  \n一款浏览器扩展程序，它通过采用本地AI大模型技术，如Ollama，自动为您的浏览器标签页进行智能分组，极大地提升了用户的浏览效率和体验。本插件不仅能够根据网页内容自动推荐合理的分组，还支持用户手动调整和管理标签，确保了灵活性和个性化。同时保护用户隐私，避免了将数据发送到外部服务器，从而无需依赖外部API密钥。\n\n### CLI Param Concat 命令参数拼接管理工具\n[GitHub链接](https://github.com/LiangWei88/cli-param-concat#readme)  \nCLI Param Concat 是一个基于 Node.js 开发的命令行参数管理工具，它通过读取文件中的参数并将其自动拼接到用户定义的命令中，简化了命令行参数的手动输入和管理。  \n该工具通过减少重复性任务和提高命令行操作的效率，帮助开发者更高效地执行复杂的命令行任务，同时避免了手动输入参数时可能出现的错误。\n\n### 码云贡献爬取工具\n**第二版:** [Gitee链接](https://gitee.com/imyyliang/gitee-contribute-scraper)  \n一个代码作业监控工具，它具有一个简洁的Web界面，允许教师输入学生的Gitee用户名。系统会自动收集每个学生的最近代码提交，并在网页上展示。此外，它还具备一个筛选功能，可以高亮显示那些在最近几天内没有提交代码的学生，使得教师能够迅速识别出哪些学生可能需要额外的关注或辅导。  \n**第一版:** [Gitee链接](https://gitee.com/imyyliang/code-checking)  \n一个自动化作业检查工具，它通过收集学生的Git仓库地址，自动爬取代码提交数据，并生成Markdown格式的报告，以便于教师快速查看和评估学生的代码提交情况。代码中包含了对GitHub和Gitee仓库的访问，以及对数据的格式化处理。\n\n### 作业提交系统\n[Gitee链接](https://gitee.com/imyyliang/homework-submission-system)  \n这是一个专为学生简历和自我介绍逐字稿设计的在线作业提交和批改平台。它允许教师通过简单的数据导入来管理学生作业，提供便捷的批改和反馈机制，帮助学生在求职前优化他们的简历和自我介绍。虽然最初计划包含更全面的班级和学生管理功能，但项目最终聚焦于核心的批改功能，以满足基本的教学需求。  \n\n### 井字棋\n[Gitee链接](https://gitee.com/imyyliang/tic-tac-toe)  \n为学生讲解JavaScript时编写的教学示例。它利用Vue框架快速搭建，旨在通过一个互动性强的游戏实例，帮助学生理解JavaScript在实际应用中的运用，同时加深他们对前端开发的理解。\n\n### 局域网评分投票工具\n[Gitee链接](https://gitee.com/imyyliang/lan-score)  \n修改自一个同事的代码, 一个基于Node.js的局域网评分投票工具，它允许学生在展示项目后，通过访问老师机器的IP地址来进行评分。这个工具不仅记录了每个参与者的评分，还计算并展示了去除最高分和最低分后的平均分，以及详细的评分记录。\n\n### Opencart 欧洲发票号修改插件\n[官网链接](https://www.opencart.com/index.php?route=marketplace/extension/info&member_token=9f4d2aa7c5ee7a444c7fc54d1b034053&extension_id=24685)  \nChange Invoice Number 是一个 OpenCart 扩展工具，它允许管理员在订单详情标签页手动输入和覆盖发票号码，增强了财务文件的定制和控制能力。这个插件是基于现有工具修改并修复了bug，经过OC 1.5.3.1和OC 1.5.6.1版本测试，它允许在发票生成后动态更改发票前缀和号码，并且修复了一个关键问题，确保发票前缀保留，以避免重新生成发票时出现编号冲突。\n\n### webpack-px2rem-loader\n[Github链接](https://github.com/LiangWei88/webpack-px2rem-loader)  \n一个实用的 webpack loader 优化版，它能够自动将 CSS 和 JS 中的像素值转换为 rem 单位，极大地简化了响应式设计的流程。它还修复了原插件中处理 media query 的 bug，确保了在不同屏幕尺寸下的兼容性。通过简单的配置，开发者可以轻松地在项目中实现像素到 rem 的转换，提高开发效率。\n\n### css 长度单位转换器\n[GitHub链接](https://github.com/LiangWei88/Design-size-convertor)  \n提供一个网页界面提交css文件, 能够智能地识别和转换CSS代码中的 px rem 等单位，支持等比转换和按比例转换，确保设计的一致性和准确性。这个工具不仅提高了前端开发的效率，还保证了在不同设计稿尺寸下的兼容性。\n\n### \"键盘侠\"\n[Gitee链接](https://gitee.com/imyyliang/jianpanxia)  \n一个键盘增强工具，它通过AutoHotKey脚本将Capslock键转变为Esc键，并赋予其vim风格的快捷键功能，极大提升了键盘的效率和灵活性。同时，它还扩展了数字键的快捷操作，通过Shift+Alt组合键快速输入数字，为无小键盘电脑日常编程和文本编辑带来便利。\n\n### AutoSiteScreenShot\n[Github链接](https://github.com/LiangWei88/AutoSiteScreenShot)  \n一个自动化网页截图工具，它能够针对单一网页在多种不同分辨率下生成截图，非常适合用于测试和验证网页在不同屏幕尺寸下的显示效果。这个工具简单易用，只需配置网址和分辨率，即可一键获取所需截图，极大地方便了网页设计的兼容性测试。\n\n### 简单 leetcode 题解\n[Github链接](https://github.com/LiangWei88/leetcode)  \n几年前摸鱼时候写的一些题目\n\n\n### Basscss 原子css\n[Gitee链接](https://gitee.com/imyyliang/basscss)  \nBasscss，一个轻量级的CSS工具库，提供无副作用的模块化样式，旨在提高开发速度和代码可读性。它以简洁和易用性为核心，是小型项目和个人开发者的理想选择，同时与Tailwind CSS和UnoCSS等流行库相比，提供了一个更为精简的原子类库解决方案。\n\n### 前端输入法词库\n[GitHub链接](https://github.com/LiangWei88/WebDevDictCN)  \nWebDevDictCN 是一个专为前端工程师和程序员设计的搜狗输入法词库，整合了1000+个与前端开发、编程和计算机相关的专业术语，旨在提高输入效率和准确性。它支持直接导入搜狗输入法，也兼容其他输入法，如讯飞，通过简单的编辑和导入操作即可使用。\n\n## 获得荣誉\n\n- **2018年** - 法律黑客松广州赛区亚军\n- **2019年** - 传智播客广州校区最佳新人\n- **2022年** - 传智播客广州校区优秀员工\n\n## 证书\n\n- 2008 年法语 B2\n- 软考中级软件设计师\n\n## 沟通语言\n\n- **法语**：熟练\n- **英语**：阅读熟练，口语一般\n- **普通话和粤语**：母语\n\n## 文章列表\n\n### [[2016]]\n- [[2016.如何在功能性和灵活性之间找到平衡？——以老版Wiz为知笔记为例]]\n- [[2016.谁动了我的硬盘？电脑数据容量单位科普入门浅析]]\n\n### [[2017]]\n- [[2017.WordPress 迁移后遇到的问题及解决方案]]\n- [[2017.如何合理定价建站服务？]]\n- [[2017.网站价值几何？]]\n- [[2017.网页设计定价：揭秘背后的故事]]\n\n### [[2023]]\n- [[2023.Vue-Admin-Work 运行时 Codemirror 错误解决方案]]\n- [[2023.前端 vue 基本功自测]]\n\n### [[2024]]\n- [[2024.ai读博客 Effective Prompt 编写高质量Prompt的14个有效方法]]\n- [[2024.Readme驱动开发（RDD）实践笔记]]\n- [[2024.个人笔记软件思考 - Obsidian vs logseq 和其他]]\n- [[2024.鸿蒙HarmonyOS开发高级认证知识点总结]]\n- [[2024.Docker镜像拉取困难？看这里！阿里云部署Dashy的成功案例]]\n- [[2024.打造高效的个人知识管理系统：我的思考与实践]]\n- [[2024.SQLite 数据库备份工具 README]]\n- [[2024.使用 AI 辅助开发阿里云 OSS 自动备份工具及监控功能]]\n[[2024.React 源码分析 - 第一部分架构说明]]\n\n# TODO 待编写介绍\n- 2018 法律黑客松广州赛区亚军\n- 断食记录小程序\n- github 状态\n- gitee 标签\n- npm 标签\n- 自己写的脚本油猴\n- youtube 总结工具本地大模型版本\n- [题库管理工具](https://gitee.com/imyyliang/question-bank-management)"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableUserTags":true,"enableHashTags":true,"dendronVersion":"0.119.0","enableEditorDecorations":true,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"/","seo":{"title":"伟's Blog","description":"梁伟的个人知识仓库"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","siteUrl":"https://liangwei.link","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"theme":"custom","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}